# %%
# Downloading and preparing stock data
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import yfinance as yf

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

start_date = '2010-01-01'
end_date = '2020-01-01'
ticker = 'INVE-B.ST'
df = yf.download(ticker,start_date,end_date)

df.reset_index(inplace=True)

# %%
X = np.array(df.index).reshape(-1,1)
y = df['Adj Close']

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=1, train_size=0.75)

linreg_model = LinearRegression()
linreg_model.fit(X_train, y_train)

predicted_price = linreg_model.predict(X_test)
predicted_price = pd.DataFrame(predicted_price,index=y_test.index, columns= ['Price'])

# %%

# Plot the stock data
plt.plot(df['Date'], df['Close'], label='Stock Price')

# Use a prediction model to generate future values for the stock price
future_dates = pd.date_range(df['Date'].iloc[-1], periods=365, freq='D')

future_prices = linreg_model.predict(future_dates)


# %%

# Add the predicted values to the dataframe and plot the line
df_future = pd.DataFrame({'Date': future_dates, 'Close': future_prices})
plt.plot(df_future['Date'], df_future['Close'], label='Predicted Price')

# Show the graph
plt.legend()
plt.show()


