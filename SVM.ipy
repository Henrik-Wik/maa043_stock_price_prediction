
# Downloading and preparing stock data
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import yfinance as yf

from sklearn.model_selection import train_test_split
from sklearn.svm import SVR

start_date = '2010-01-01'
end_date = '2020-01-01'
ticker = 'INVE-B.ST'
df = yf.download(ticker,start_date,end_date)
df.index = df.index.date
df.index.name = "Date"

# Extract the relevant columns from the DataFrame
X = df[['Open', 'High', 'Low', 'Close', 'Volume']]
y = df['Adj Close']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Train the SVM model on the training data
reg = SVR(kernel='linear').fit(X_train, y_train)

# Use the trained model to make predictions on the test data
y_pred = reg.predict(X_test)

# Plot the actual vs predicted stock prices
plt.plot(y_test, label='Actual')
plt.plot(y_pred, label='Predicted')
plt.legend()
plt.show()