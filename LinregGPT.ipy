# %% [markdown]
# # Downloading and preparing stock data

# %%
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import yfinance as yf

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

start_date = '2010-01-01'
end_date = '2020-01-01'
ticker = 'INVE-B.ST'
df = yf.download(ticker, start_date, end_date)
df

# %%
# Stock price plot

df['Adj Close'].plot(figsize=(10, 7))
plt.title("INVE-B Stock Price", fontsize=17)
plt.xlabel("Time", fontsize=14)
plt.ylabel("Price", fontsize=14)
plt.grid(which="major", color='k', linestyle='-.', linewidth=0.5)

# %%
X = df[['Open', 'High', 'Low', 'Close', 'Volume']]
y = df['Adj Close']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=0)

# Train the linear regression model on the training data
reg = LinearRegression().fit(X_train, y_train)

# Use the trained model to make predictions on the test data
y_pred = reg.predict(X_test)
predicted_price = pd.DataFrame(y_pred, index=y_test.index, columns=['Price'])

predicted_price.plot(figsize=(10, 7))
y_test.plot()
plt.title("INVE-B Stock Price", fontsize=17)
plt.xlabel("Time", fontsize=14)
plt.ylabel("Price", fontsize=14)
plt.grid(which="major", color='k', linestyle='-.', linewidth=0.5)
plt.legend(['predicted_price', 'actual_price'])

print("R2 score: ", reg.score(X_test, y_test))


# %%
future_dates = pd.date_range(start=df.index[-1], periods=3, freq='M')
future_df = pd.DataFrame(index=future_dates, columns=df.columns)

# Concatenate the future data with the existing data
df = pd.concat([df, future_df])

# Fill in the future data with estimated values
X = df[['Open', 'High', 'Low', 'Close', 'Volume']]

X = X.replace(np.nan, '', regex=True)
X

# %%
future_pred = reg.predict(X[-3:])

# Store the predictions in the DataFrame
df.iloc[-3:, df.columns.get_loc('Adj Close')] = future_pred

# Print the predicted stock prices for the coming months
print("Predicted stock prices for the coming months: \n",
      df.iloc[-3:, df.columns.get_loc('Adj Close')])
